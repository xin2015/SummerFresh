@{Layout = null;}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title></title>
    <link href="~/content/css/reset.css" rel="stylesheet" />
    <link href="~/content/css/common.css" rel="stylesheet" />
    <link href="~/content/themes/default/default.css" rel="stylesheet" />
    <style>
        html, body {
            overflow: hidden;
        }

        .repeater-item {
            border: 1px solid #CCC;
            background-color: #EEE;
            padding: 10px;
            margin-top: 10px;
            margin-left: 10px;
            width: 150px;
            height: 150px;
            border-radius: 5px;
            cursor: pointer;
            float: left;
        }

            .repeater-item div {
                overflow-y: scroll;
                height: 134px;
            }

            .repeater-item p {
                border-bottom: 1px dashed #CCC;
                font-weight: bold;
                padding-bottom: 5px;
            }

        .repeater-item-checked {
            background: white url(../../Content/themes/default/images/success.png) 140px 5px no-repeat;
        }

        .repeater-item-checked-lock {
            background: #EEEFFF url(../../Content/themes/default/images/success.png) 140px 5px no-repeat;
        }
    </style>
    <script src="~/content/js/jquery-1.9.1.min.js"></script>
    <script src="~/content/js/common.js"></script>
    <script type="text/javascript">
        var urlParameter = summerFresh.getQueryString();
        var postData = { RoleId: urlParameter.id, PermissionId: '' };
        var addRolePermission = "exec:RoleTypePermission.Add";
        var removeRolePermission = "exec:RoleTypePermission.Remove";
        var getRolePermission = "sqlid:RoleTypePermission.Get";
        var getPermission = "/Permission/Get";// "sqlid:Permission.Select";
        entityName = "Permission";
        var roleTypeId = "";
        function autoHeight() {
            var listHeight = $(window).height() - $(".tab-box").outerHeight();
            $("[tabItem]").css("height", listHeight).css("overflow-y", "auto");
        }
        $(function () {
            $(window).bind("resize", autoHeight);
            if (urlParameter.type == "role") {
                addRolePermission = "exec:RolePermission.Add";
                removeRolePermission = "exec:RolePermission.Remove";
                getRolePermission = "sqlid:RolePermission.Get";
            }
            summerFresh.dataService(getPermission, {}, function (res) {
                if (res && res.length > 0) {
                    var template = "<div id=\"{PermissionId}\" class=\"repeater-item\"><p>{PermissionName}</p><div><ul></ul></div></div>";
                    var liTemplate = "<li><input type='checkbox' id='{PermissionId}'>&nbsp;<label>{PermissionName}</label></li>";
                    var tabContainerTemplate = "<div tabItem='{PermissionId}' id=\"{PermissionId}\"></div>";
                    var spanTemplate = "<span key=\"{PermissionId}\" class=\"tab-item\">{PermissionName}</span>";
                    var ruleTemplate = "<br /><input type='radio' disabled='disabled' style='margin-left:15px;' name='{ParentId}' id='{PermissionId}' />&nbsp;<label>{PermissionName}</label>";
                    $.each(res, function () {
                        if (this.PermissionType == 1) {
                            if (this.Url && this.Url.length > 0) {
                                var orgPermissionId = this.PermissionId;
                                this.PermissionId = this.PermissionId + "_";
                                $("#tabContainer").append(summerFresh.modelViewBinder(this, tabContainerTemplate));
                                $("#tabHeader").append(summerFresh.modelViewBinder(this, spanTemplate));
                                this.ParentId = this.PermissionId;
                                this.PermissionId = orgPermissionId;
                                $("#" + this.ParentId).append(summerFresh.modelViewBinder(this, template));
                            }
                            else {
                                $("#tabContainer").append(summerFresh.modelViewBinder(this, tabContainerTemplate));
                                $("#tabHeader").append(summerFresh.modelViewBinder(this, spanTemplate));
                            }
                        }
                        if (this.PermissionType == 2) {
                            $("#" + this.ParentId).append(summerFresh.modelViewBinder(this, template));
                        }
                        if (this.PermissionType == 3) {
                            $("#" + this.ParentId).find("ul").append(summerFresh.modelViewBinder(this, liTemplate));
                        }
                        if (this.PermissionType == 4) {
                            $(summerFresh.modelViewBinder(this, ruleTemplate)).insertAfter($("#" + this.ParentId).next("label"));
                        }
                    });
                    summerFresh.widget.init();
                    autoHeight();
                    if (urlParameter.type == "role") {
                        //如果是给角色分配权限，先加载此角色对应的角色类型的权限，并把相关权限设为不允许修改。
                        summerFresh.dataService("sqlid:RoleTypePermission.Get", { RoleId: urlParameter.RoleTypeId }, function (res) {
                            if (res && res.length > 0) {
                                $.each(res, function () {
                                    if (this.PermissionType == 3) {
                                        $("#" + this.PermissionId).attr("checked", true).attr("disabled", true);
                                        if (this.PermissionRuleId && this.PermissionRuleId != '') {
                                            $("#" + this.PermissionRuleId).attr("checked", true).attr("disabled", true);
                                        }
                                    }
                                    else {
                                        $("#" + this.PermissionId).addClass("repeater-item-checked-lock");
                                    }
                                });
                            }
                        }, "post", false);
                    }
                    summerFresh.dataService(getRolePermission, postData, function (res) {
                        if (res && res.length > 0) {
                            $.each(res, function () {
                                if (this.PermissionType == 3) {
                                    $("#" + this.PermissionId).attr("checked", true);
                                    if (this.PermissionRuleId && this.PermissionRuleId != '') {
                                        $("#" + this.PermissionRuleId).attr("checked", true);
                                        $("input[name='" + this.PermissionId + "']").attr("disabled", false);
                                    }
                                }
                                else {
                                    $("#" + this.PermissionId).addClass("repeater-item-checked");
                                }
                            });
                        }
                    });
                    $(".repeater-item").bind("click", function () {
                        if ($(this).hasClass("repeater-item-checked-lock")) {
                            return;
                        }
                        if ($(this).hasClass("repeater-item-checked")) {
                            var ids = [];
                            ids.push(this.id);
                            $(this).find(":checked").each(function () {
                                ids.push(this.id);
                                this.checked = false;
                            });
                            $(this).find("input[type='radio']").attr("disabled", true);
                            postData.PermissionId = ids.join(',');
                            var div = $(this);
                            summerFresh.dataService(removeRolePermission, postData, function (r) {
                                if (r) {
                                    div.removeClass("repeater-item-checked");
                                }
                            });
                        }
                        else {
                            $(this).find("input[type='checkbox']").each(function () {
                                postData.PermissionId = this.id;
                                this.checked = true;
                                summerFresh.dataService(addRolePermission, postData);
                            });
                            $(this).find("input[type='radio']").attr("disabled", false);
                            postData.PermissionId = this.id;
                            var div = $(this);
                            summerFresh.dataService(addRolePermission, postData, function (r) {
                                if (r) {
                                    div.addClass("repeater-item-checked");
                                }
                            });
                        }
                    });
                    $(".repeater-item").find("input[type='checkbox']").bind("click", function (e) {
                        postData.PermissionId = this.id;
                        if (this.checked) {
                            summerFresh.dataService(addRolePermission, postData);
                            $("input[name='" + postData.PermissionId + "']").attr("disabled", false);
                        }
                        else {
                            $("input[name='" + postData.PermissionId + "']").attr("disabled", true);
                            summerFresh.dataService(removeRolePermission, postData, function (res) {
                                if (res) {
                                    $("input[name='" + postData.PermissionId + "']").attr("checked", false);
                                }
                            }, "post", true);
                        }
                        if ($(this).closest(".repeater-item").hasClass("repeater-item-checked")) {
                            e.stopPropagation();
                        }
                    });
                    $(".repeater-item").find("input[type='radio']").bind("click", function (e) {
                        postData.PermissionId = this.name;
                        postData.PermissionRuleId = this.id;
                        summerFresh.dataService(removeRolePermission, postData, function () { }, "post", false);
                        summerFresh.dataService(addRolePermission, postData, function (res) {
                            if (res) {
                                delete postData.PermissionRuleId;
                            }
                        }, "post", false);
                        if ($(this).closest(".repeater-item").hasClass("repeater-item-checked")) {
                            e.stopPropagation();
                        }
                    });
                }
            });
        });
    </script>
</head>
<body>
    <div class="main-container">
        <div id="tabContainer" widget="Tab" initIndex="0">
            <div id="tabHeader" class="tab-box"></div>

        </div>
    </div>
</body>
</html>
