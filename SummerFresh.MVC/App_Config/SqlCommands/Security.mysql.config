<?xml version="1.0" encoding="utf-8"?>
<commands xmlns="http://schemas.bingosoft.net/netframework/sqlcommand">

  <!-- 返回用户登录所用的信息：目前只需登录密码，如果有用户状态，请过滤掉非启用状态的用户 -->
  <command key="Security.GetUserLoginInfo">
    <![CDATA[
        SELECT Password FROM SYS_User u LEFT JOIN SYS_Department d ON u.DepartmentId=d.DepartmentId
        WHERE LoginId = #LoginId#  
        AND u.Status='Enabled'
        AND d.Status='Enabled'
        Limit 1
    ]]>
  </command>

  <!-- 返回已登录用户所有信息
         必须字段：Id,Name
         可选字段：Password,Email,MobilePhone,Sex,Age,Birthday 
         其他字段：除上面字段外返回的额外也可以通过安全上下文的用户对象获取-->
  <command key="Security.GetUserByLoginId">
    <![CDATA[
      SELECT 
      u.*,d.DepartmentCode,d.DepartmentName
      FROM SYS_User u 
      INNER JOIN SYS_Department d 
      ON u.DepartmentId=d.DepartmentId 
      WHERE u.LoginId = #LoginId#    
    ]]>
  </command>
  <!--修改密码-->
  <command key="Security.ResetPassword">
    <![CDATA[
      UPDATE SYS_User SET Password=#Password# WHERE UserId=#UserId#
    ]]>
  </command>
  <!-- 返回用户所拥有的所有角色，参数：UserId，返回字段：Id,Name -->
  <command key="Security.GetAllUserRoles">
    <![CDATA[
        SELECT ur.RoleId AS Id, rt.RoleTypeName as Name
        FROM   SYS_UserRole AS ur 
        INNER JOIN SYS_Role r on r.RoleId=ur.RoleId
	      INNER JOIN SYS_RoleType rt ON r.RoleTypeId = rt.RoleTypeId
        WHERE ur.UserId = #UserId#
    ]]>
  </command>

  <!-- 返回用户所拥有的所有操作权限，参数：UserId，UserRoles:用户所有角色的字符串，多个以逗号隔开
         返回字段：Operation,Name,Url,Rule,Priority,ElementId,Behaviour-->
  <command key="Security.GetAllUserPermissions">
    <![CDATA[
        SELECT 
        sp.PermissionCode Operation,
        sp.PermissionName Name,
        '$Env:AppPath$'+(case when sp.Url is null then (select Url From SYS_Permission where PermissionId = sp.ParentId) else sp.Url end) as Url,
        sr.RuleContent `Rule`,
        sr.Priority,
        sp.ElementId,
        '' Behaviour
        FROM SYS_RolePermission AS rp 
        INNER JOIN SYS_Permission  AS sp ON rp.PermissionId = sp.PermissionId 
        LEFT  JOIN SYS_PermissionRule AS sr ON rp.PermissionRuleId = sr.PermissionRuleId
        WHERE rp.RoleId in ($UserRoles?'43C8BAAD-930A-4989-A4E2-0077C067FEAd'$)      
        union
        SELECT 
        sp.PermissionCode Operation,
        sp.PermissionName Name,
        '$Env:AppPath$'+(case when sp.Url is null then (select Url From SYS_Permission where PermissionId = sp.ParentId) else sp.Url end) as Url,
        sr.RuleContent [Rule],
        sr.Priority,
        sp.ElementId,
        '' Behaviour
        FROM SYS_RoleTypePermission AS rtp 
        INNER JOIN SYS_Permission  AS sp ON rtp.PermissionId = sp.PermissionId 
        LEFT  JOIN SYS_PermissionRule AS sr ON rtp.PermissionRuleId = sr.PermissionRuleId
        WHERE rtp.RoleTypeId IN (SELECT RoleTypeId FROM SYS_Role WHERE RoleId in ($UserRoles?'43C8BAAD-930A-4989-A4E2-0077C067FEAd'$))              
    ]]>
  </command>

  <!-- 返回系统注册的所有受控Url访问权限(Url必须以'/'开头），参数：无，
         返回字段：Operation,Name,Url
    -->
  <command key="Security.GetAllUrlPermissions">
    <![CDATA[
        SELECT 
        PermissionCode Operation,
        PermissionName Name,
        '$Env:AppPath$'+Url as Url
        FROM SYS_Permission 
        WHERE Url LIKE '/%'
		    AND PermissionType = 2
    ]]>
  </command>

  <!-- 返回系统注册的所有受控页面元素-->
  <command key="Security.GetAllUIPermissions">
    <![CDATA[
        SELECT 
         p1.PermissionCode Operation,
			   p1.PermissionName Name,
			   p1.ParentId Parent,
			   '$Env:AppPath$'+(case when ifnull(p1.url,'')='' then (select url from SYS_Permission where PermissionId = p1.ParentId) else p1.url end) as Url,
			   p1.ElementId,
			   '' ElementBehaviour 
		 FROM SYS_Permission AS p1 
        WHERE p1.PermissionType = 3 and p1.ElementId is not null and p1.ElementId<>''
    ]]>
  </command>
</commands>